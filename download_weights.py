#!/usr/bin/env python3
"""
–°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤–µ—Å–∞ –¥–ª—è –º–æ–¥–µ–ª–µ–π
"""
import torch
import torch.hub
import requests
import os
from urllib.parse import urlparse

def download_file(url, filename):
    """–°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º"""
    try:
        print(f"–°–∫–∞—á–∏–≤–∞–µ–º {url}")
        response = requests.get(url, stream=True)
        response.raise_for_status()
        
        total_size = int(response.headers.get('content-length', 0))
        downloaded = 0
        
        with open(filename, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                if chunk:
                    f.write(chunk)
                    downloaded += len(chunk)
                    if total_size > 0:
                        percent = (downloaded / total_size) * 100
                        print(f"\r–ü—Ä–æ–≥—Ä–µ—Å—Å: {percent:.1f}%", end='', flush=True)
        
        print(f"\n‚úÖ –°–∫–∞—á–∞–Ω–æ: {filename}")
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
        return False

def download_fastdvdnet_weights():
    """–°–∫–∞—á–∏–≤–∞–µ–º –≤–µ—Å–∞ FastDVDnet"""
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    urls = [
        "https://www.dropbox.com/scl/fi/k6b3f6l1x1mkpq5kcbvo0/fastdvdnet.pth?rlkey=qgp07vn9dqxj3tfrbjdkp7yz1&raw=1",
        "https://zenodo.org/record/4916798/files/fastdvdnet_no_fp16.pth",
        "https://drive.google.com/uc?id=1zEFT1fBnI-aKPE4VBhM6PsGxdlOTf4Vm&export=download"
    ]
    
    for i, url in enumerate(urls):
        print(f"\nüîÑ –ü—Ä–æ–±—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ {i+1}: {url}")
        filename = f"fastdvdnet_weights_{i+1}.pth"
        
        if download_file(url, filename):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–∞–π–ª
            try:
                checkpoint = torch.load(filename, map_location='cpu', weights_only=False)
                if isinstance(checkpoint, dict) or hasattr(checkpoint, 'state_dict'):
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤–µ—Å–∞ FastDVDnet –≤ {filename}")
                    return filename
                else:
                    print(f"‚ùå {filename} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤–µ—Å–∞")
                    os.remove(filename)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ {filename}: {e}")
                if os.path.exists(filename):
                    os.remove(filename)
    
    return None

def download_realbasicvsr_weights():
    """–°–∫–∞—á–∏–≤–∞–µ–º –≤–µ—Å–∞ RealBasicVSR"""
    # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –≤–µ—Å–∞ –∏–∑ OpenMMLab
    urls = [
        "https://download.openmmlab.com/mmediting/restorers/real_basicvsr/realbasicvsr_c64b20-1x30x8_8xb1-lr5e-5-150k_reds-0f353734.pth",
        "https://download.openmmlab.com/mmediting/restorers/real_basicvsr/realbasicvsr_wogan_c64b20-2x30x8_8xb2-lr1e-4-300k_reds-41795bb0.pth"
    ]
    
    for i, url in enumerate(urls):
        print(f"\nüîÑ –ü—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å RealBasicVSR –∏—Å—Ç–æ—á–Ω–∏–∫ {i+1}")
        filename = f"realbasicvsr_weights_{i+1}.pth"
        
        if download_file(url, filename):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
            try:
                checkpoint = torch.load(filename, map_location='cpu', weights_only=False)
                if 'state_dict' in checkpoint or 'generator' in checkpoint:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤–µ—Å–∞ RealBasicVSR –≤ {filename}")
                    return filename
                else:
                    print(f"‚ùå {filename} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
                    os.remove(filename)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ {filename}: {e}")
                if os.path.exists(filename):
                    os.remove(filename)
    
    return None

def main():
    print("üöÄ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–µ—Å–æ–≤ –¥–ª—è FastDVDnet –∏ RealBasicVSR")
    
    # –°–∫–∞—á–∏–≤–∞–µ–º FastDVDnet
    print("\n1Ô∏è‚É£ FastDVDnet:")
    fastdvd_weights = download_fastdvdnet_weights()
    if fastdvd_weights:
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ
        os.rename(fastdvd_weights, "fastdvdnet_weights.pth")
        print("‚úÖ FastDVDnet –≤–µ—Å–∞ –≥–æ—Ç–æ–≤—ã: fastdvdnet_weights.pth")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–µ—Å–∞ FastDVDnet")
    
    # –°–∫–∞—á–∏–≤–∞–µ–º RealBasicVSR
    print("\n2Ô∏è‚É£ RealBasicVSR:")
    rbv_weights = download_realbasicvsr_weights()
    if rbv_weights:
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ
        os.rename(rbv_weights, "realbasicvsr_weights.pth")
        print("‚úÖ RealBasicVSR –≤–µ—Å–∞ –≥–æ—Ç–æ–≤—ã: realbasicvsr_weights.pth")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–µ—Å–∞ RealBasicVSR")
    
    print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    if os.path.exists("fastdvdnet_weights.pth"):
        size = os.path.getsize("fastdvdnet_weights.pth") / 1024 / 1024
        print(f"‚úÖ FastDVDnet: {size:.1f} –ú–ë")
    
    if os.path.exists("realbasicvsr_weights.pth"):
        size = os.path.getsize("realbasicvsr_weights.pth") / 1024 / 1024  
        print(f"‚úÖ RealBasicVSR: {size:.1f} –ú–ë")

if __name__ == "__main__":
    main()