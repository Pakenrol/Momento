#!/usr/bin/env python3
"""
–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ FastDVDnet –≤ CoreML
–¢–æ—á–Ω–æ –ø–æ –ø–ª–∞–Ω—É: https://github.com/m-tassano/fastdvdnet
"""
import os
import sys
import torch

def load_fastdvdnet_model():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å FastDVDnet"""
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é FastDVDnet
    fastdvdnet_path = './fastdvdnet'
    if os.path.exists(fastdvdnet_path):
        sys.path.insert(0, fastdvdnet_path)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π FastDVDnet –∏–∑ models.py
        from models import FastDVDnet
        print("‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π FastDVDnet")
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –∫–æ–¥–µ
        model = FastDVDnet(num_input_frames=5)
        
        # –ü–æ–∫–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ –≤–µ—Å–æ–≤ (–≤–µ—Å–∞ —Å–∫–∞—á–∞–ª–∏—Å—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)
        print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≤–µ—Å–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã")
            
        model.eval()
        return model
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ FastDVDnet: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π fastdvdnet —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω")
        return None

def convert_to_coreml():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç FastDVDnet –≤ CoreML"""
    model = load_fastdvdnet_model()
    if model is None:
        return False
        
    try:
        print("üîÑ –ù–∞—á–∏–Ω–∞—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤ CoreML...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤—Ö–æ–¥: 5 –∫–∞–¥—Ä–æ–≤ –ø–æ 3 –∫–∞–Ω–∞–ª–∞ + –∫–∞—Ä—Ç–∞ —à—É–º–∞
        # FastDVDnet –ø—Ä–∏–Ω–∏–º–∞–µ—Ç [B, C*T, H, W] –≥–¥–µ T=5 –∏ noise_map [B, 1, H, W]
        H, W = 256, 256
        example_input = torch.randn(1, 15, H, W)  # 5 –∫–∞–¥—Ä–æ–≤ * 3 –∫–∞–Ω–∞–ª–∞ = 15
        noise_map = torch.ones(1, 1, H, W) * 0.1  # –ü—Ä–æ—Å—Ç–∞—è –∫–∞—Ä—Ç–∞ —à—É–º–∞
        
        # –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É –¥–ª—è –æ–¥–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
        class FastDVDnetWrapper(torch.nn.Module):
            def __init__(self, model):
                super().__init__()
                self.model = model
                
            def forward(self, x):
                # x: [B, 15, H, W] - 5 –∫–∞–¥—Ä–æ–≤
                B, _, H, W = x.shape
                # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–∞—Ä—Ç—É —à—É–º–∞
                noise_map = torch.ones(B, 1, H, W, device=x.device) * 0.1
                return self.model(x, noise_map)
        
        wrapped_model = FastDVDnetWrapper(model)
        
        # –¢—Ä–∞—Å—Å–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
        traced_model = torch.jit.trace(wrapped_model, example_input)
        print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è CoreML –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
        torch.jit.save(traced_model, 'fastdvdnet_traced.pt')
        print("‚úÖ –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è FastDVDnet –≤ CoreML")
    success = convert_to_coreml()
    if success:
        print("‚úÖ FastDVDnet –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ CoreML")
    else:
        print("‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")