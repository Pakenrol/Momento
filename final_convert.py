#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–±–µ–∏—Ö –º–æ–¥–µ–ª–µ–π –≤ CoreML
"""
import torch
import coremltools as ct
import os

def convert_both_models():
    print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í CoreML")
    print(f"CoreMLTools –≤–µ—Ä—Å–∏—è: {ct.__version__}")
    
    success_count = 0
    
    # 1. FastDVDnet (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    try:
        print("\n1Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é FastDVDnet (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)...")
        fastdvd_model = torch.jit.load('FastDVDnet_fixed.pt', map_location='cpu')
        fastdvd_model.eval()
        
        fastdvd_coreml = ct.convert(
            fastdvd_model,
            inputs=[ct.TensorType(shape=(1, 15, 256, 256))],
            compute_units=ct.ComputeUnit.ALL,
            convert_to='mlprogram',
            minimum_deployment_target=ct.target.macOS13
        )
        
        fastdvd_coreml.save("FastDVDnet.mlpackage")
        size_mb = sum(os.path.getsize(os.path.join("FastDVDnet.mlpackage", f)) for f in os.listdir("FastDVDnet.mlpackage") if os.path.isfile(os.path.join("FastDVDnet.mlpackage", f))) / 1024 / 1024
        print(f"‚úÖ FastDVDnet.mlpackage —Å–æ–∑–¥–∞–Ω ({size_mb:.1f} –ú–ë)")
        success_count += 1
        
    except Exception as e:
        print(f"‚ùå FastDVDnet –æ—à–∏–±–∫–∞: {e}")
    
    # 2. RealBasicVSR
    try:
        print("\n2Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é RealBasicVSR...")
        rbv_model = torch.jit.load('RealBasicVSR_final.pt', map_location='cpu')
        rbv_model.eval()
        
        rbv_coreml = ct.convert(
            rbv_model,
            inputs=[ct.TensorType(shape=(1, 3, 256, 256))],
            compute_units=ct.ComputeUnit.ALL,
            convert_to='mlprogram',
            minimum_deployment_target=ct.target.macOS13
        )
        
        rbv_coreml.save("RealBasicVSR_x2.mlpackage")
        if os.path.exists("RealBasicVSR_x2.mlpackage"):
            print(f"‚úÖ RealBasicVSR_x2.mlpackage —Å–æ–∑–¥–∞–Ω")
            success_count += 1
        
    except Exception as e:
        print(f"‚ùå RealBasicVSR –æ—à–∏–±–∫–∞: {e}")
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/2 –º–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    models = ["FastDVDnet.mlpackage", "RealBasicVSR_x2.mlpackage"]
    for model in models:
        if os.path.exists(model):
            print(f"‚úÖ {model} - –ì–û–¢–û–í")
        else:
            print(f"‚ùå {model} - –ù–ï –°–û–ó–î–ê–ù")
    
    return success_count == 2

if __name__ == "__main__":
    success = convert_both_models()
    if success:
        print("\nüéâ –í–°–ï –ú–û–î–ï–õ–ò –£–°–ü–ï–®–ù–û –°–ö–û–ù–í–ï–†–¢–ò–†–û–í–ê–ù–´ –í CoreML!")
        print("üì± –ì–æ—Ç–æ–≤—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ macOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–µ–π")