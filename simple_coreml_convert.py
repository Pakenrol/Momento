#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è traced –º–æ–¥–µ–ª–µ–π –≤ CoreML
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥
"""
import torch
import coremltools as ct
import numpy as np

def convert_traced_models():
    print("üîÑ –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è traced –º–æ–¥–µ–ª–µ–π –≤ CoreML...")
    print(f"CoreMLTools –≤–µ—Ä—Å–∏—è: {ct.__version__}")
    
    # FastDVDnet
    try:
        print("1Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é FastDVDnet...")
        fastdvd_model = torch.jit.load('FastDVDnet_final.pt', map_location='cpu')
        fastdvd_model.eval()
        
        # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        fastdvd_coreml = ct.convert(
            fastdvd_model,
            inputs=[ct.TensorType(shape=(1, 15, 256, 256))],
            compute_units=ct.ComputeUnit.ALL,
            convert_to='mlprogram',
            minimum_deployment_target=ct.target.macOS13
        )
        
        fastdvd_coreml.save("FastDVDnet.mlpackage")
        print("‚úÖ FastDVDnet.mlmodel —Å–æ–∑–¥–∞–Ω")
        
    except Exception as e:
        print(f"‚ùå FastDVDnet –æ—à–∏–±–∫–∞: {e}")
    
    # RealBasicVSR  
    try:
        print("2Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é RealBasicVSR...")
        rbv_model = torch.jit.load('RealBasicVSR_final.pt', map_location='cpu')
        rbv_model.eval()
        
        # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        rbv_coreml = ct.convert(
            rbv_model,
            inputs=[ct.TensorType(shape=(1, 3, 256, 256))],
            compute_units=ct.ComputeUnit.ALL,
            convert_to='mlprogram',
            minimum_deployment_target=ct.target.macOS13
        )
        
        rbv_coreml.save("RealBasicVSR_x2.mlpackage")
        print("‚úÖ RealBasicVSR_x2.mlmodel —Å–æ–∑–¥–∞–Ω")
        
    except Exception as e:
        print(f"‚ùå RealBasicVSR –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    convert_traced_models()